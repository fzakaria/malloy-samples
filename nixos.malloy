/**
 * Create a BigQuery table that is the result of:
 *   SELECT
 *   *,
 *   ARRAY_LENGTH(parent) > 1 AS is_merge_commit
 *   FROM `bigquery-public-data.github_repos.commits` commits
 *   WHERE 'NixOS/nixpkgs' IN UNNEST(repo_name) AND
 *         EXTRACT(YEAR FROM TIMESTAMP_SECONDS(author.time_sec)) >= 2019
 *
 * This is to save on some cost to avoid scanning the whole table.
 * Feel free to request access
 *
 */
source: nixpkgs_commits is table('malloydev.github_nixpkgs_commits_from_2019') {
    where: 
        // We do not want merge commits since that will double count the commiter
        // as the one who merged it.
        // This should only keep the PullRequest commit now.
        not is_merge_commit        
    dimension:
        author_time is timestamp_seconds(author.time_sec)
        package is regexp_extract(subject, r'^([\w-]+):.+')
       
}

/** Use this query to check how we are handling our package regular expression. */
query: empty_package is nixpkgs_commits -> {
    where: package = ''
    project:
        subject
        package
    limit: 100
}

/**
 * For every package what are the authors who commit to it.
 */
query: package_author is nixpkgs_commits -> {
    where: package != ''
    group_by: package
    nest: by_author is {
        group_by: author_name is author.name
        aggregate: commit_count is count(distinct commit)
    }
}

/**
 * For every file what are the commits by month to it.
 */
query: file_time is nixpkgs_commits -> {
    // File paths can be returned as non empty string
    where: trim(difference.old_path) != ''
    group_by: difference.old_path
    nest: by_time_line_chart is {
        group_by: t is author_time.month
        aggregate: c is count(distinct commit)
    }
}

query: top10_commiters_dashboard is nixpkgs_commits -> {
    //TODO(fmzakari): this join_many shouldn't need to be here. File bug?
    join_one: package_author is from(->package_author) with package
    join_one: file_time is from(->file_time) with difference.old_path
    
    group_by: author.name
    aggregate: commit_count is count(distinct commit)
    top: 10

    nest: commits_by_time_line_chart is {
        group_by: author_time_month is author_time.month
        aggregate: commit_count is count(distinct commit)
    }

    nest: top_10_files is {
        group_by: difference.old_path
        aggregate: change_count is count(distinct commit)
        top: 10
        nest: commits_by_time_line_chart is {
            group_by: t is file_time.by_time_line_chart.t
            aggregate: c is file_time.by_time_line_chart.c.sum()
        }
    }

    nest: top_10_packages is {
        where: package != null
        group_by: package
        aggregate: change_count is count(distinct commit)
        top: 10

        nest: top_3_commiters is {
          where: author.name != package_author.by_author.author_name
          group_by: package_author.by_author.author_name
          aggregate: change_count is package_author.by_author.commit_count.sum()
          top: 3
        }
    }

}